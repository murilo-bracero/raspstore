openapi: 3.0.3
info:
  title: Raspstore FS Service
  description: Microservice REST specification of fs-service endpoints.
  contact:
    email: soon@todo.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:9000/fs-service
tags:
  - name: files
    description: File Upload/Download workflow

paths:
  /files:
    post:
      tags:
        - files
      summary: Upload File
      description: |- 
        Upload file to server. This can only be done by the logged in user.
      operationId: fileUpload
      requestBody:
        $ref: '#/components/requestBodies/UploadFileRequest'
      responses:
        '204':
          description: 'File uploaded successfully'
        '400':
          $ref: '#/components/responses/BadRequestFileUpload'
  /files/{fileId}:
    get:
      tags:
        - files
      summary: Download file
      description: |- 
        Download file that logged in user has access. 
        This action can only be done by the logged in user.
      operationId: updateFileMetadata
      parameters:
        - $ref: '#/components/parameters/FileIdPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/SuccessFileResponse'
        '400':
          description: fileId malformed or invalid
        '404':
          description: file info with provided id not found
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
components:
  schemas:
    UploadFileRepresentation:
      type: object
      properties:
        path:
          type: string
          description: /folder1/folder2
        file:
          type: string
          format: binary
    ApiErrorException:
      type: object
      properties:
        code:
          type: string
          example: 'ERR010'
        message:
          type: string
          example: 'Field path must not be null or empty'
        traceId:
          type: string
          example: 'df438c36-9aa4-11ed-a8fc-0242ac120002'
  requestBodies:
    UploadFileRequest:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/UploadFileRepresentation'
  parameters:
    FileIdPathParameter:
      name: fileId
      in: path
      required: true
      schema:
        type: string
        example: 63d14dfdec04b7ba9c2372f5
    
  responses:
    SuccessFileResponse:
      description: File retrieved successfully
      content:
        application/octet-stream:
          schema:
            type: string
            example: file binary
    
    BadRequestFileUpload:
      description: payload invalid or malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorException'
    
    InternalServerErrorResponse:
      description: internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorException'
          example:
            code: "ERR500"
            message: "An expected error occured"
            traceId: "c1611200-9aa5-11ed-a8fc-0242ac120002"
            
    FileMetadataNotFoundErrorResponse:
      description: file metadata with provided id not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorException'
          example:
            code: "ERR404"
            message: "File not found"
            traceId: "c1611200-9aa5-11ed-a8fc-0242ac120002"
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []